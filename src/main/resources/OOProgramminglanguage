OOProgramming language
Architecture of java


Myfrist.java --->

system.out.println("hello)")


SourceCode -->compiler--->bytecode(classFile)-->JVM--->output


JDK
JRE


Eclipse intellij SublimeText notepadd++ Atom VSCode Atom Netbeans


Set environment Variables-- for Java


javac


Set comopiler for your IDE.


create a file--> Myfrist.java--> 

class Human(){

hands;
legs;
mouth;

humanSpeak(){
	humanSpeakswithMouth;
}



	
}


encapusulation
abstraction
inheritence
polymorphism


DataTypes:

int--> integer
char--> charcter
string
float--> decimal values
double--decimal values


loops:
If
if else
for
do while
while

OOPS concepts


Human(){
	
	speak()
	walk()
	run()
	dance()
	eat()
}


ganapathi(){
	speak()
	walk()
	run()
	dance()
	eat()
}

pankaj(){
	speak()
	walk()
	run()
	dance()
	eat()	
}


Iheritenace
Encapuslation
POlyMorphism
Abstraction



Iheritenace



Single inheritence:   parentclass--> child class

MUlti Level inheritence:       parent class -->
								childA class extends parent()
								-->childB extends childA class

Hirerachy interitance:        parent class
                   
                   childA class        childB class






parent class

child class


Human(){ ---> parent class
	speak()
	walk()
	run()
	dance()
	eat()
}


ganapathi() extends human() extends pankaj(){

workout()
shop()
	
}

pankaj extends humnas(){
	
	sing()
}


main(){
	
	pankaj.workout();
	pankaj.speak();
	pankaj.sing();
}



Overriding and Overloading



Over Riding 

Human(){ ---> parent class
	speak()
	walk()
	run()
	dance()
	eat()
}


ganapathi() extends human() {

workout()
speak(telugu)
shop()
	
}

pankaj extends humnas(){
	
	sing()
	speak(hindi)
}



Over Loading


class Human(){

speak(telugu)

speak(telugu, hindi)

speak(telugu,hindi, english)
	
}


Encapusaltion

class  Encap(){
int a
String s
double d

}

public main method1 (){

	Enacp encap = new Encap();
	encap.a = 10;
	encap.s= "mohan"

	
}



if i want to bind my data and operate through methods is called Encapusulation



git clone https://github.com/ihubteam2/RestAssured.git

git status --> list of files which you made changes

git add --all // it will add all the files

git add <fileName> it will add only respective file

git add . this will add all the files including .gitignore

git add .*  this will add all the files irrespective of the file extension

git commit -m "Any meaningfull message"

git push -u origin master

git push


git checkout -b <branchName>

git status --> list of files which you made changes

git add --all // it will add all the files

git add <fileName> it will add only respective file

git add . this will add all the files including .gitignore

git add .*  this will add all the files irrespective of the file extension

git commit -m "Any meaningfull message"

git push // this push changes will be


loops
operators
arrays
lists

Abstarction:

1. Interfaces
2. Abstarct Classes



Class Hello(){


	Swift swift = new swift();



}

Class Car(){

	public void streeing(){

	}

	public void wheels(){

	}

}



interfcae i (){


	public void car();

	pubic void swift();

}



abstract Class Honda() extends Car{

	public void streeing(){

	}

	public abstarct void wheels(){

	}

	public abstarct void gear(){

	}

	public abstarct void seats(){

	}

}


Class Swift() extends Honda(){

	public void streeing(){

	}

	public void wheels(){


}



try {
   Assert.assertEquals(expectedValue, actualValue);
      }
catch(Exception e) {
    System.out.println("Value is invalid");
  }



String str = "{ \"name\": \"Alice\", \"age\": 20 }";
JSONObject obj = new JSONObject(str);
String n = obj.getString("name");
int a = obj.getInt("age");
System.out.println(n + " " + a);


Rest Assured

It is a library file  and will be added as one od dependencies to our project.
Rest Assured to i used to test API and Web service testing [ PUT, POST,GET,PATCH, DELETE..]
Integrated to anykind of build projects [ MAVEN, GRADLE]
Integrated to any kind of Testing framework [JUNIT, TESTNG]
Rest Assured is developed using Groovy language
Rest Assured uses BDD gherkin key words like given,when and then
You can validate any kind of API content Format (JSON,XML,HTML)
Rest Assured i language agnostic.


Pre-Requesites:

JAVA installation
IDE: Eclipse, intellij or net beans or visualStudioCode or Atom
Maven -- mvn
TestNG
RestAssured library


SOAP-- Simple Object Access Protocal-- instrcutions

REST-- Architecture-- JSON,XML, HTMl

JSON-JAVA Script object Notation

SAAS --> SOftware as a service


Framework:


    BDD Cucumber
--------------------
|Rest-Assured JAVA |
--------------------


FRAMEWORK --> Java lnaguage and tool used:

combination of Reporting+helper+utils+F



Design of a framework:
----------------------

Define Scope of testing.
Need to define an Automation Tool [Open Source/ Commercial Tool]

Regression, Integration and E2E

Helper files [ Helper+Utils]
Functional Methods
Reporting
Logging


Testing POST METHOD:

we need send a body content to this method.
there are multiple ways to send a body content.

1. sending it as a string
2. sending it as a hash string
3. sending it through an excel
4. sending it through a json file
5. building pojo objects and sending it



How to send a Json Body as a string?

1.Body is in jSON Format:

            {
                "name": "morpheus",
                "job": "leader"
            }

2. Convert this body into a String object

        String testBody = "{\n" +
                "\"name\": \"morpheus\",\n" +
                "\"job\": \"leader\"\n" +
                "}";

3. Send this string Object as a body parameter.


HashMap:

it is a collection of objects with Key and Value pairs

in Json format
 "name": "Xyz"


How to send a Post body using HashMap

1. We will create a new HashMap object
2. We will assign key value pairs to the hash
3. We will call the HashMap object to the post request body


How to send a post body using Json File

1. we will create a new json file.
2. call the json file with file input stream method.
3. And use it in the post request body.


How to send a post body using POJO object.

1. Create a pojo file
2. Define attributes
3. Call the class instance into the post methods
4. pass the instance value into the post request body


Ecommerce: Price, markDownPrice, %offPrice, $offPrice, regularPrice


URL = URI+basePath+endpoint+<pathParams>+QueryParams

https://reqres.in/api/users

baseURI = "https://reqres.in"
basePath = /api
Endpoint = /users

1. configuration properties(.properties,.yml)
2. Constants class and get the values


XLS-- HSSFWorkbook method
XLSX - XSSFWorkbook method


PUT: method is used to update a Single value of the data.
PATCH : method is used to update a batch number of values of the data.
But most of the time in implementation we use PUT method to update data.


DELETE:

Design a Framework:

1. Test Plan:

    1. it is derived from the BRS document of a project( Specific to the project)
    2. It also defines the complete testing activities ( tools and Technologies) that are used in the project.

    ROI -- Return on investment

2. Test Strategy
    1. The Strategy is a high level document how testing is done. This will be for a complete Organization.
3. Test Design
    1. Test Pyramid ( 100% automation is possible)

    70% of your test cases would be done by unit test cases.
    20% is from your integration test cases
    Payment validation-- Amazon shopping
    10% is from your e2e test cases.

4. Test Implementation
    1. Tools
    2. Framework aspect

Pre-requisites:

1. JAVA (jdk installed)
2. IDE(intellij/eclipse/VSC/etc...)
3. Maven
4. Cucumber
5. TestNG
6. RestAssured


--src --main
        --java
            -- Helper Folder [ Defining POST PUT DELETE and PATCH generic Methods]
            -- Utils Folder[ Third party integration libraries for Reporting, logging and data drives libraries]
            -- Implementation classes

        --resources
            --datafiles
      --test
        --java
            -- Helper Folder [ Defining POST PUT DELETE and PATCH generic Methods]
            -- Utils Folder[ Third party integration libraries for Reporting, logging and data drives libraries]
            -- Implementation classes

        --resources
            --datafiles



1. Customized framework
2. Hybrid framework



Manual Test cases

1. Open url "xyz.com"
2. enter "abc@def.com" in the username field
3.
4
5. verify wether the user has logged in or not.

Given  i navigate to the loginPage
When i enter vlaid userName and Password
Then i should see successful login
























